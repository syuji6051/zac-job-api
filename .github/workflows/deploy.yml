on:
  push:
    branches:
      - 'master'

name: Build and Deploy
jobs:
  install:
    name: install
    runs-on: ubuntu-latest
    outputs:
      STAGE: ${{ steps.variable.outputs.STAGE }}
    steps:
      - id: variable
        run: |
          if [ ${{ github.ref }} == 'refs/heads/deployment/production' ]; then
            echo "::set-output name=STAGE::prod"
          else
            echo "::set-output name=STAGE::dev"
          fi
  build-deploy:
    name: build and deploy
    runs-on: ubuntu-latest
    needs:
      - install
    env:
      STAGE: ${{ needs.install.outputs.STAGE }}
      GITHUB_TOKEN: ${{ secrets.NPM_GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@master
      - name: variable
        id: variable
        run: |
          if [ $STAGE == 'prod' ]; then
            echo "::set-output name=AWS_ACCESS_KEY_ID::${{ secrets.PROD_AWS_ACCESS_KEY_ID }}"
            echo "::set-output name=AWS_SECRET_ACCESS_KEY::${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}"
          else
            echo "::set-output name=AWS_ACCESS_KEY_ID::${{ secrets.DEV_AWS_ACCESS_KEY_ID }}"
            echo "::set-output name=AWS_SECRET_ACCESS_KEY::${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}"
          fi
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ steps.variable.outputs.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ steps.variable.outputs.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: Serverless build and deploy
        run: |
          npm config set //npm.pkg.github.com/:_authToken $GITHUB_TOKEN
          npm install
          npm run build
          npm run deploy ${STAGE}
